#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SIZE 10

// Функция для вычисления среднего арифметического
float calculate_average(int arr[], int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }
    return (float)sum / size;
}

// Функция для обнуления элементов меньше среднего
void zero_below_average(int arr[], int size, float average) {
    for (int i = 0; i < size; i++) {
        if (arr[i] < average) {
            arr[i] = 0;
        }
    }
}

// Функция сортировки пузырьком
void bubble_sort(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

void print_array(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

int main() {
    int arr[SIZE];
    srand(time(0));

    // Заполнение массива случайными числами
    for (int i = 0; i < SIZE; i++) {
        arr[i] = rand() % 100;
    }

    printf("Исходный массив:\n");
    print_array(arr, SIZE);

    // Вычисление среднего арифметического
    float avg = calculate_average(arr, SIZE);
    printf("Среднее арифметическое: %.2f\n", avg);

    // Обнуление элементов меньше среднего
    zero_below_average(arr, SIZE, avg);
    printf("Массив после обнуления:\n");
    print_array(arr, SIZE);

    // Сортировка массива
    bubble_sort(arr, SIZE);
    printf("Отсортированный массив:\n");
    print_array(arr, SIZE);

    return 0;
}
